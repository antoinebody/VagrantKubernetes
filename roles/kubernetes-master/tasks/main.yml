---

#/etc/kubernetes/manifests/kube-apiserver.yaml

- name: Check if Kebernetes have been already initialized
  stat: 
    path: /etc/kubernetes/manifests/kube-apiserver.yaml
  register: kube_api_server_file

- name: Init Kubernetes cluster
  become: true
  shell: |
    kubeadm init --pod-network-cidr=192.168.0.0/16 \
                 --apiserver-advertise-address {{ groups['kube-master'][0] }} \
                 --token b0f7b8.8d1767876297d85c 
  when: kube_api_server_file.stat.exists == False
  environment:
    PATH: "$PATH:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:{{extra_path}}"


# sudo cp /etc/kubernetes/admin.conf $HOME/
# sudo chown $(id -u):$(id -g) $HOME/admin.conf
# export KUBECONFIG=$HOME/admin.conf
#kubectl apply -f https://docs.projectcalico.org/v2.6/getting-started/kubernetes/installation/hosted/kubeadm/1.6/calico.yaml

- name: Enable and restart kubelet engine
  become: true
  systemd:
    name: kubelet
    daemon_reload: yes
    state: restarted
    enabled: yes

- name: Copy admin conf to home user
  become: true
  copy:
    src: /etc/kubernetes/admin.conf
    dest: "{{ ansible_env.HOME }}"
    remote_src: yes

- name: Change owner of admin.conf
  become: true
  file:
    path: "{{ ansible_env.HOME }}/admin.conf"
    owner: "{{ ansible_user_id }}"

- name: Apply calico network layer
  shell: kubectl apply -f https://docs.projectcalico.org/v2.6/getting-started/kubernetes/installation/hosted/kubeadm/1.6/calico.yaml
  environment:
    KUBECONFIG: "{{ ansible_env.HOME }}/admin.conf"
    PATH: "$PATH:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:{{extra_path}}"




  




# journalctl -xe | grep cni

